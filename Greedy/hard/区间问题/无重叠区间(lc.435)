> 先排序
>
> 1. 按end排序
>
> 从左到右遍历，取end最小的，这样留给下一个区间的空间就更大
>
> 2. 按start排序
>
> 从右到左遍历，取start越大的，越靠后，留给前面区间空间更大

```java
public int eraseOverlapIntervals(int[][] intervals) {
        Arrays.sort(intervals,(a,b)->{
            if (a[1]==b[1])return a[0]-b[0];
            else return a[1]-b[1];
        });
        int count= 1 ;
        int edge = intervals[0][1];
        for (int i = 1; i < intervals.length; i++) {
            if (intervals[i][0]<edge)
                count++;
            else edge = intervals[i][1];
        }
        return count;
    }
```

